---
title: "Experimento fatorial e ajuste de modelos - Análise de correlação"
format: html
editor: visual
message: false
warning: false
---

Durante a aula 9, vão ser estudados dados que levam a entender melhor os Experimento fatorial e ajuste de modelos

## Pacotes carregados

```{r}
library(gsheet)
library(tidyverse)
library(lme4)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(r4pde)
library(drc)
library(stats)
```

## **Importando dados**

```{r}
milho <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1345524759")
```

## **Análise de um experimento em parcelas subdivididas**

Experimentos em parcelas subdivididas são utilizados quando o nível de um fator primário (ou tratamento) é aplicado a uma parcela relativamente grande e todos os níveis de um segundo fator secundário são aplicados às subparcelas desta parcela maior. Os tratamentos primários são distribuídos às parcelas de acordo com um delineamento especificado, já os tratamentos secundários são distribuídos às subparcelas de forma aleatória.

## **visualização dos dados**

```{r}
milho |> 
  ggplot(aes(method,index))+
  geom_jitter(which = 0.1, alpha = 0.2)+
  facet_wrap(~ hybrid)+
  stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "blue")

##Dependendo do híbrido parece que há efeito do método

```

## **Modelo para parcela subdividida**

```{r}
milho <- milho |> 
  mutate(block = as.factor(block))

mix2 <- lmer(index ~ hybrid*method + block + (1|block/hybrid),
            data = milho)


#No fator aleatório, colocamos o hibrido dentro do bloco. ( 1 | block/hybrid); Comparamos os híbridos nas linhas e os métodos nas colunas.

```

ANOVA MIX2

```{r}
anova (mix2)
```

#### **Verificação das premissas**

```{r}
check_normality(mix2)
check_heteroscedasticity(mix2)
```

```{r}
plot(simulateResiduals(mix2))
qqnorm(residuals(mix2))
qqline(residuals(mix2))
hist(residuals(mix2))

```

Conclui-se que os dados seguem distribuição normal. Porém, não há homogeneidade de variância entre os grupos. Logo será preciso uma alternativa para prosseguir a análise, por exemplo a transformação dos dados com raiz quadrada.

Depois de carregar o Emmeans:

```{r}
medias_milho <- emmeans(mix2,
                        ~ hybrid | method,
                        type = "response")
medias_milho
medias_milho2 <- emmeans(mix2,
                         ~ method | hybrid,
                         type = "response")
medias_milho2
```

```{r}
cld(medias_milho2, Letters = LETTERS)
```

A significância da anova ou efeitos da interação; Realiza-se o teste de médias se há efeito; Comparamos a diferença dentro dos métodos, e depois, comparamos a diferença entre os métodos dentro dos híbridos.

## **Produtividade (yield)**

Seguindo os mesmos procedimentos para o índice de doença, será conduzida avaliação da produtividade.

```{r}
mix3 <- lmer(sqrt(index) ~ hybrid*method + block + (1|block/hybrid), data = milho)
```

**ANOVA MIX3**

```{r}
anova (mix3)
```

#### **Verificação das premissas**

```{r}
check_normality(mix3)
check_heteroscedasticity(mix3)

```

# **Regressão linear**

Usada para modelar e analisar a relação entre uma variável dependente (também chamada de variável resposta) e uma ou mais variáveis independentes (também chamadas de variáveis preditoras). O objetivo da regressão linear é ajustar uma linha reta (ou um plano, no caso de múltiplas variáveis) aos dados que minimiza a soma dos quadrados dos resíduos (a diferença entre os valores observados e os valores previstos pelo modelo).

## **Importando dados**

```{r}
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")
```

## **visualização dos dados**

```{r}
   estande |> 
  ggplot(aes(trat, nplants))+
  geom_jitter(which = 0.1, alpha = 0.3)+
  facet_wrap(~ exp)+
  stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black")+
     geom_smooth(method = "lm", se = F)

   
   #Mostramos biologicamente que há redução do estande de plantas conforme o aumento da inoculação do patógeno. podemos assumir dois modelos: linear simples ou quadrático. Podemos verificar qual modelo se adequa melhor à regressão.
```

Experimento 1:

```{r}
exp1 <- estande |> 
  filter(exp == 1)

exp1 |> 
  ggplot(aes(trat, nplants))+
  geom_point()+
  geom_smooth(se = F)
```

```{r}
#MODELO LINEAR

lm1 = lm(nplants ~ trat,
         data = exp1)

summary (lm1)
```

Experimento 2:

```{r}
exp2 <- estande |> 
  filter(exp == 2)

exp2 |> 
  ggplot(aes(trat, nplants))+
  geom_point()+
  geom_smooth(se = F, method = "lm",
              formula = y~poly(x,2),
              color = "red")+
  geom_smooth(method = "lm", se = FALSE)


```

```{r}

#Modelo de primeira ordem
lm2 <- lm(nplants~trat,
          data = exp2)

summary(lm2)
hist(residuals(lm2))

# Nodelo de segunda ordem
exp2$trat2 <- exp2$trat^2

```

Experimento 3:

```{r}
exp3 <- estande |> 
  filter(exp == 3)

exp3 |> 
  ggplot(aes(trat, nplants))+
  geom_point()+
  geom_smooth(se = F) #method = "lm")
```

```{r}
lm3 <- lm(nplants~trat + trat2,
          data = exp2)

summary(lm3)
hist(residuals(lm3))
```

Comparação de modelos diferente usando os mesmos dados

### **Usando GLM**

Podemos atribuir o glm com distribuição normal ou distribuição de poisson (considerando que a distribuição não é normal).

```{r}
#glm2 <- glm(nplants ~ trat, family = gaussian, data = exp2)
#summary(glm2)

#AIC(glm2)

glm2b <- glm(nplants ~ trat, family = "poisson", data  = exp2)
summary(glm2b)
```

```{r}
glm2b <- glm(nplants ~ trat, family = poisson(link = "log"),
             data = exp2)
summary(glm2b)
AIC(glm2b)
```

## **Análise de múltiplos ensaios**

Com múltiplos ensaios, é possível analisá-los individualmente para observar uma tendência geral no comportamento dos tratamentos. No entanto, existem outras alternativas, como aplicar um modelo de regressão linear global ou extrair a informação global utilizando modelos mistos. Nesse caso, os ensaios são tratados como fator aleatório, ou seja, advêm de uma distribuição (população), e o objetivo é estimar os parâmetros para essa população. Para exemplificar esse caso, um conjunto de dados (`WhiteMoldSoybean`) presente no pacote **`r4pde`** será importado, mas antes o pacote deverá ser carregado. AIC menor é o melhor modelo ajustado.

```{r}
wm <- WhiteMoldSoybean


wm |> 
  ggplot(aes(inc, yld))+
  geom_point()+
  facet_wrap(~ study)+
  theme_minimal()+
  geom_smooth(method = "lm", se = F)

#Predizer uma resposta em relação à outra. Duas respostas numéricas contínuas, ajustanto o modelo linear ou não. Muitos estudos diferentes, gráfico geral. A saída dos gráficos mostra que com a ação do fungicida e redução da severidade acontece um incremento de produtividade da soja.
```

```{r}
mofo1 <- lm(yld ~ inc,
            data = wm)
#intercepto pordutividade quando a incidencia é zero, inc é o slope com 10% de incidencia esta perdendo 90kg. 
summary(mofo1)

#O 3299 é a produtividade por ha quando não há controle. O 9,261 indica a redução de produtividade em kg/ha de acordo com o aumento da severidade.
```

### **Modelo linear por ensaio**

Agrupando todos os estudos em um único gráfico.

#### **Mofo 1**

```{r}
wm |> 
  ggplot(aes(inc, yld, group = factor(study)))+
  geom_point()+
  #facet_wrap(~ study)+
  theme_minimal()+
  geom_smooth(method = "lm", se = F)

mofo1 <- lm(yld ~ inc,
            data = wm)
summary(mofo1)

#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
```

#### **Mofo 2**

```{r}
library(broom)
mofo2 <- wm |> 
  group_by(study) |> 
  do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
mofo2
```

```{r}
df<- mofo2 |> 
  filter(term == ".$inc")
mean(df$estimate)
```

```{r}
#Histograma da produtividade quando incidência é 0
library(cowplot)
p1 <- mofo2 |> 
  filter(term == "(Intercept)") |> 
           ggplot(aes(x = estimate))+
           geom_histogram(bins = 8, color = "white", fill = "gray")+
           theme_r4pde()+
           labs(x = "Intercept", y = "frequency")
p2 <- mofo2 |> 
  filter(term == ".$inc") |> 
           ggplot(aes(x = estimate))+
           geom_histogram(bins = 8, color = "white", fill = "gray")+
           theme_r4pde()+
           labs(x = "Slopes", y = "frequency")
library(patchwork)
p1+p2


```

**Mofo 3**

**Modelo misto**

```{r}
#Modelo misto
mofo3 <- lmer(yld ~ inc + (inc | study), data = wm,
              REML = F)
summary(mofo3)
```

```{r}
library(lme4)
mofo3 <- lmer(yld ~ inc + (inc|study), data = wm, REML = F)
summary(mofo3)
```

```{r}
wm <- WhiteMoldSoybean

wm |> 
  ggplot(aes(inc, yld)) +
  geom_point() +
  #facet_wrap(~ study) +
  theme_minimal() +
  geom_smooth(method = 'lm', se = T)
```

```{r}
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
```

```{r}
wm <- WhiteMoldSoybean
wm |> 
  ggplot(aes(inc, yld))+
  geom_point()+
  facet_wrap(~ study)+
  theme_minimal()+
  geom_smooth(method = "lm", se = F)

#Predizer uma resposta em relação à outra. Duas respostas numéricas contínuas, ajustanto o modelo linear ou não. Muitos estudos diferentes, gráfico geral. A saída dos gráficos mostra que com a ação do fungicida e redução da severidade acontece um incremento de produtividade da soja.
```

```{r}
mofo1 <-  lmer(yld ~ inc + (inc|study), data = wm, REML = F)

summary(mofo3)

```

```{r}
confint(mofo3, method = "Wald")
```

**Aula 10 - 29/05**

# **Análise de correlação**

## Pacotes carregados

```{r}
#pacotes 
library(tidyverse)
library(patchwork)
library(AgroR)
library(corrplot)
```

## **Importando dados**

```{r}
imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
```

r2: coeficiente de determinação o quento da variação de y explicada pelo x;

Coenficiente de correlação: a força de associação entre x e y;

Análise preeliminar dos dados.

```{r}
imgs1 <- imgs|> 
  ggplot(aes(Assess, LeafDoctor))+
geom_point()+ geom_smooth(method = "lm")
```

```{r}
imgs2 <- imgs|> 
  ggplot(aes(Assess, ImageJ))+
geom_point()+geom_smooth(method = "lm")
```

```{r}
imgs3 <- imgs |> 
  ggplot(aes(LeafDoctor, ImageJ))+
geom_point()+geom_smooth(method = "lm")
```

```{r}
imgs1 + imgs2 + imgs3
```

## **Utilizando o AgroR**

```{r}
#matriz de correlação 
imgs2 <- imgs |> 
  dplyr::select(3:5)

  corgraph(imgs2)
  
```

Matriz de correlação Cor entrega o coeficiente de correlação de pearson. O cor test da uma estatística mais completa. O valor observado 0,98 é bem próximo de um, então indica uma correlação forte. Quanto maior a correlação menor o p-valor, se os dados forem mais dispersos o p-valor vai ser maior e não vai ser significativo. O corgraph é um pacote que indica a correlação entre as respostas da análise. Os valores dentro da matriz irão indicar o coeficiente de correlação entre as varíaveis observadas.

```{r}
cor.test(imgs$Assess, imgs$LeafDoctor)
  cor(imgs$Assess, imgs$LeafDoctor)
```

```{r}
cor_imgs2 <- cor(imgs2)
corrplot(cor_imgs2, method = "number", type = "upper")
```

## **Importando dados**

```{r}
campo <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
```

```{r}
campo2 <- campo |> 
  dplyr::select(DFC, FER, PROD)

corgraph(campo2)
```

```{r}
campo |> 
  ggplot(aes(DFC, PROD))+
  geom_jitter()

#O modelo quadratico é um experimento melhor do que o de primeira ordem, explica melhor o que vemos no gráfico anterior e a variação dos desvios. Pode ser utilizado essa variação, predizer o numero de plantas afetadas. y = (66,3 - 1,77trat) + (0,02trat^2) : equação do modelo
```

## **Importando dados**

```{r}
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")
```

```{r}
estande |>
  ggplot(aes(trat, nplants, color = factor (exp))) +
  geom_boxplot() +
  facet_wrap(~ exp) +
  theme_bw() +
  stat_summary(fun.data = "mean_cl_boot", size = 0.5,
               color = "black")
```

```{r}
estande |>
  ggplot(aes(trat, nplants, color = factor (exp))) +
  geom_jitter(width = 0.1, alpha = 0.2) +
  facet_wrap(~exp) +
  theme_bw() +
  stat_summary(fun.data = "mean_cl_boot", size = 0.5,
               color = "black") +
  geom_smooth(method = "lm", se = F)
```

```{r}
exp2 <- estande |>
  filter (exp == 2)

exp2 |> 
  ggplot(aes(trat, nplants)) +
  geom_point() +
  ylim(0,100) +
  geom_smooth(method = "lm", se = F, formula = y ~poly(x,2), color = "black") +
  geom_smooth(method = "lm",
              se = FALSE)
```

```{r}
#MODELO LINEAR

exp2$trat2 <- exp2$trat^2

#primeira ordem
lm2 <- lm(nplants ~ trat, 
          data = exp2)
summary(lm2)
```

```{r}
hist(residuals(lm2))
```

```{r}
#segunda ordem

lm3 <- lm(nplants ~ trat + trat2, 
          data = exp2)
summary(lm3)
```

```{r}
hist(residuals(lm3))
```

```{r}
AIC(lm2)
AIC(lm3)
```

```{r}
library(AgroR)
with(exp2, polynomial(trat, nplants, grau = 3))
```

## **Importando dados**

```{r}
pyra <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
```

```{r}
pyra2 <- pyra |> 
  group_by(code, dose) |> 
  summarise(mean_germination = mean(germination))

pyra2 |> 
  ggplot(aes(dose, mean_germination))+
  geom_point()+
  facet_wrap(~code)
```

```{r}

pyra2 <- pyra |>
  group_by(code, dose) |>
  summarise(mean_germination = mean(germination)) 
 
library(drc)

isolado186 <- pyra2 |>
  filter(code == "186")

drc1 <- drm(mean_germination ~ dose, data = isolado186,
            fct = LL.3())
AIC(drc1)
```

```{r}
plot(drc1)
```

```{r}
ED(drc1, 50, interval = "delta")
```

```{r}
summary(drc1)
```

### **Usando o pacote ec50estimator**

Faz tudo isso que foi feito anteriormente para todos os códigos.

```{r}
library(ec50estimator)


df_ec50 <- estimate_EC50(mean_germination ~ dose, 
                         data = pyra2, 
                         isolate_col = "code",
                         interval = "delta", 
                         fct = drc::LL.3())


```

Gráfico com as doses de EC50 e intervalo de confiança:

```{r}
df_ec50 |> 
  ggplot(aes(reorder(ID, Estimate), Estimate))+
  geom_point()+
  geom_errorbar(aes(ymin = Lower,
                    ymax = Upper),
                width = 0.1)+
  ylim (0, 1.2)+
  coord_flip()
```
