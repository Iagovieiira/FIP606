ggplot(aes(trat, nplants, color = factor (exp))) +
geom_boxplot() +
facet_wrap(~ exp) +
theme_bw() +
stat_summary(fun.data = "mean_cl_boot", size = 0.5,
color = "black")
estande |>
ggplot(aes(trat, nplants, color = factor (exp))) +
geom_boxplot() +
facet_wrap(~ exp) +
theme_bw() +
stat_summary(fun.data = "mean_cl_boot", size = 0.5,
color = "black")
estande |>
ggplot(aes(trat, nplants, color = factor (exp))) +
geom_jitter(width = 0.1, alpha = 0.2) +
facet_wrap(~exp) +
theme_bw() +
stat_summary(fun.data = "mean_cl_boot", size = 0.5,
color = "black") +
geom_smooth(method = "lm", se = F)
exp2 <- estande |>
filter (exp == 2)
exp2 |>
ggplot(aes(trat, nplants)) +
geom_point() +
ylim(0,100) +
geom_smooth(method = "lm", se = F, formula = y ~poly(x,2), color = "black") +
geom_smooth(method = "lm",
se = FALSE)
#MODELO LINEAR
exp2$trat2 <- exp2$trat^2
#primeira ordem
lm2 <- lm(nplants ~ trat,
data = exp2)
summary(lm2)
hist(residuals(lm2))
#segunda ordem
lm3 <- lm(nplants ~ trat + trat2,
data = exp2)
summary(lm3)
hist(residuals(lm3))
hist(residuals(lm3))
AIC(lm2)
AIC(lm3)
library(AgroR)
with(exp2, polynomial(trat, nplants, grau = 3))
pyra2 <- pyra |>
group_by(code, dose) |>
summarise(mean_germination = mean(germination))
library(drc)
isolado186 <- pyra2 |>
filter(code == "186")
drc1 <- drm(mean_germination ~ dose, data = isolado186,
fct = LL.3())
AIC(drc1)
plot(drc1)
ED(drc1, 50, interval = "delta")
ED(drc1, 50, interval = "delta")
summary(drc1)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = sens2,
isolate_col = "code",
interval = "delta",
fct = drc :: LL.3())
library(ec50estimator)
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = sens2,
isolate_col = "code",
interval = "delta",
fct = drc :: LL.3())
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = pyra2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
df_ec50 |>
ggplot(aes(reorder(ID, Estimate), Estimate)) +
geom_point() +
geom_errorbar(aes(ymin = Lower, ymax= Upper), width = 0.1) +
coord_flip()
library(ec50estimator) #Permite estimar o ec50 de todos os isolados ao mesmo tempo
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = pyra2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
df_ec50
#Se a ec50 for maior, menos sensível é o isolado (nesse caso ao fungicida)
df_ec50 |>
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower, ymax = Upper))+
coord_flip()
df_ec50 %>%
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower,
ymax = Upper),
width = 0.1)+
ylim (0, 1.2)+
coord_flip()
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = pyra2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
df_ec50 |>
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower,
ymax = Upper),
width = 0.1)+
ylim (0, 1.2)+
coord_flip()
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germ~dose,
data = fung2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germ~dose,
data = fung2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germ~dose,
data = fung2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germ~dose,
data = fung2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germ~dose,
data = fung2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = pyra2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
df_ec50 %>%
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower,
ymax = Upper),
width = 0.1)+
ylim (0, 1.2)+
coord_flip()
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germ~dose,
data = fung2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
anova (mix2)
anova (mix2)
anova (mix2)
milho <- milho |>
mutate(block = as.factor(block))
mix <- lmer(index ~ hybrid*method + block + (1|block/hybrid),
data = milho)
anova (mix2)
#No fator aleatório, colocamos o hibrido dentro do bloco. ( 1 | block/hybrid); Comparamos os híbridos nas linhas e os métodos nas colunas.
milho <- milho |>
mutate(block = as.factor(block))
mix <- lmer(index ~ hybrid*method + block + (1|block/hybrid),
data = milho)
anova (mix2)
#No fator aleatório, colocamos o hibrido dentro do bloco. ( 1 | block/hybrid); Comparamos os híbridos nas linhas e os métodos nas colunas.
milho <- milho |>
mutate(block = as.factor(block))
mix2 <- lmer(index ~ hybrid*method + block + (1|block/hybrid),
data = milho)
anova (mix2)
#No fator aleatório, colocamos o hibrido dentro do bloco. ( 1 | block/hybrid); Comparamos os híbridos nas linhas e os métodos nas colunas.
anova (mix2)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all
fit_all.interc <- fit_all |>
filter(term == "(Intercept)")
p1 <- fit_all.interc |>
ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Intercept')
fit_all.inc <- fit_all |>
filter(term == ".$inc")
p2 <- fit_all.inc |>
ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Incidence')
p1 + p2
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld)) +
geom_point() +
#facet_wrap(~ study) +
theme_minimal() +
geom_smooth(method = 'lm', se = T)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lmer(yld ~ inc + (inc|study), data = wm, REML = F)
summary(mofo3)
mofo1 <- lm(yld ~ inc,
data = wm)
#intercepto pordutividade quando a incidencia é zero, inc é o slope com 10% de incidencia esta perdendo 90kg.
summary(mofo1)
#O 3299 é a produtividade por ha quando não há controle. O 9,261 indica a redução de produtividade em kg/ha de acordo com o aumento da severidade.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
library(gsheet)
library(tidyverse)
library(lme4)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(r4pde)
library(drc)
library(stats)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all.interc <- fit_all |>
filter(term == "(Intercept)")
p1 <- fit_all.interc |>
ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Intercept')
library(lmtest)
library(lmtest)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
#Histograma da produtividade quando incidência é 0
library(cowplot)
p1 <- mofo2 |>
filter(term == "(Intercept)") |>
ggplot(aes(x = estimate))+
geom_histogram(bins = 8, color = "white", fill = "gray")+
theme_r4pde()+
labs(x = "Intercept", y = "frequency")
p2 <- mofo2 |>
filter(term == ".$inc") |>
ggplot(aes(x = estimate))+
geom_histogram(bins = 8, color = "white", fill = "gray")+
theme_r4pde()+
labs(x = "Slopes", y = "frequency")
library(patchwork)
p1+p2
#Modelo misto
mofo3 <- lmer(yld ~ inc + (inc | study), data = wm,
REML = F)
summary(mofo3)
library(lme4)
mofo3 <- lmer(yld ~ inc + (inc|study), data = wm, REML = F)
summary(mofo3)
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld)) +
geom_point() +
#facet_wrap(~ study) +
theme_minimal() +
geom_smooth(method = 'lm', se = T)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
library(lmtest)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
confint(mofo3, method = "Wald")
p2 <- fit_all.inc |>
ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Incidence')
imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
imgs1 <- imgs|>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+ geom_smooth(method = "lm")
imgs1 <- imgs|>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+ geom_smooth(method = "lm")
imgs2 <- imgs|>
ggplot(aes(Assess, ImageJ))+
geom_point()+geom_smooth(method = "lm")
imgs1 + imgs2 + imgs3
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld))+
geom_point()+
facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld))+
geom_point()+
facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
mofo2 <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
df<- mofo2 |>
filter(term == ".$inc")
mean(df$estimate)
mofo2 <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
library(broom)
mofo2 <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
mofo2
library(gsheet)
library(tidyverse)
library(remotes)
library(rnaturalearth)
library(r4pde)
library(ggthemes)
library(ggspatial)
library(plotly)
library(leaflet)
library(ggrepel)
library(scatterpie)
library(gsheet)
library(tidyverse)
library(remotes)
library(rnaturalearth)
library(r4pde)
library(ggthemes)
library(ggspatial)
library(plotly)
library(leaflet)
library(ggrepel)
library(scatterpie)
vicosa <- leaflet() |>
addTiles() |>
addProviderTiles(providers$Esri.NatGeoWorldMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
vicosa
vicosa <- leaflet(sbr) |>
addTiles() |>
#addProviderTiles(providers$Esri.NatGeoWorldMap) |>
#setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
vicosa
Viçosa <- leaflet() |>
addTiles() |>
setView(lng = -42.8825, lat = - 20.7546, zoom = 15)
Viçosa
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
sbr2 <- sbr |>
separate(planting, into =
c("year", "month", "day"), sep = "-", remove = FALSE)
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
MG <- BRA |> filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(color = "black",
fill = "white") +
geom_point(data = sbr2,
aes(longitude, latitude, color = year), alpha = 0.5)+
facet_wrap(~year)+
theme_void()
sbr2 <- sbr |>
separate(planting, into =
c("year", "month", "day"), sep = "-", remove = FALSE)
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
MG <- BRA |> filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(color = "black",
fill = "white") +
geom_point(data = sbr2,
aes(longitude, latitude, color = year), alpha = 0.5)+
facet_wrap(~year)+
theme_void()
BRA <- ne_states (country = "Brazil",
returnclass = "sf")
MG <- BRA |>
filter(name_en == "Minas Gerais")
bra <- ggplot(BRA) +
geom_sf(fill = "white", color = "blue", linewidth = 0.5) +
geom_point(data = MG, aes(longitude, latitude), color ="red") + theme_map() +
annotation_north_arrow(which_north = "grid")
library(ggspatial)
ggplot(BRA) +
annotation_north_arrow(location = "bl")+
annotation_scale(location = "br")+
geom_sf(color = "black",
fill = "white") +
geom_point(data = sbr2,
aes(longitude, latitude, color = year, size = severity), alpha = 0.5)+
labs(color = "Planting Year")+
theme_minimal()+
theme(legend.position = "right")
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
