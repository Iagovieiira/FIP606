ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Intercept')
fit_all.inc <- fit_all |>
filter(term == ".$inc")
p2 <- fit_all.inc |>
ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Incidence')
p1 + p2
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld)) +
geom_point() +
#facet_wrap(~ study) +
theme_minimal() +
geom_smooth(method = 'lm', se = T)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
mofo1 <-  lmer(yld ~ inc + (inc|study), data = wm, REML = F)
summary(mofo3)
mofo1 <- lm(yld ~ inc,
data = wm)
#intercepto pordutividade quando a incidencia é zero, inc é o slope com 10% de incidencia esta perdendo 90kg.
summary(mofo1)
#O 3299 é a produtividade por ha quando não há controle. O 9,261 indica a redução de produtividade em kg/ha de acordo com o aumento da severidade.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1)
#Código muito importante para agrupar vários experimentos. Já detalha as médias para cada variável resposta.
library(gsheet)
library(tidyverse)
library(lme4)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(r4pde)
library(drc)
library(stats)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all.interc <- fit_all |>
filter(term == "(Intercept)")
p1 <- fit_all.interc |>
ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Intercept')
library(lmtest)
library(lmtest)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
#Histograma da produtividade quando incidência é 0
library(cowplot)
p1 <- mofo2 |>
filter(term == "(Intercept)") |>
ggplot(aes(x = estimate))+
geom_histogram(bins = 8, color = "white", fill = "gray")+
theme_r4pde()+
labs(x = "Intercept", y = "frequency")
p2 <- mofo2 |>
filter(term == ".$inc") |>
ggplot(aes(x = estimate))+
geom_histogram(bins = 8, color = "white", fill = "gray")+
theme_r4pde()+
labs(x = "Slopes", y = "frequency")
library(patchwork)
p1+p2
#Modelo misto
mofo3 <- lmer(yld ~ inc + (inc | study), data = wm,
REML = F)
summary(mofo3)
library(lme4)
mofo3 <- lmer(yld ~ inc + (inc|study), data = wm, REML = F)
summary(mofo3)
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld)) +
geom_point() +
#facet_wrap(~ study) +
theme_minimal() +
geom_smooth(method = 'lm', se = T)
mofo1 <-  lm(yld ~ inc, data = wm)
summary(mofo1)
library(lmtest)
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
confint(mofo3, method = "Wald")
p2 <- fit_all.inc |>
ggplot(aes(x = estimate)) +
geom_histogram(bins = 8) +
theme_clean() +
labs(x = 'Incidence')
imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
imgs1 <- imgs|>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+ geom_smooth(method = "lm")
imgs1 <- imgs|>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+ geom_smooth(method = "lm")
imgs2 <- imgs|>
ggplot(aes(Assess, ImageJ))+
geom_point()+geom_smooth(method = "lm")
imgs1 + imgs2 + imgs3
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld))+
geom_point()+
facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld))+
geom_point()+
facet_wrap(~ study)+
theme_minimal()+
geom_smooth(method = "lm", se = F)
imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
fit_all <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = T))
mofo2 <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
df<- mofo2 |>
filter(term == ".$inc")
mean(df$estimate)
mofo2 <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
library(broom)
mofo2 <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
mofo2
library(gsheet)
library(tidyverse)
library(remotes)
library(rnaturalearth)
library(r4pde)
library(ggthemes)
library(ggspatial)
library(plotly)
library(leaflet)
library(ggrepel)
library(scatterpie)
library(gsheet)
library(tidyverse)
library(remotes)
library(rnaturalearth)
library(r4pde)
library(ggthemes)
library(ggspatial)
library(plotly)
library(leaflet)
library(ggrepel)
library(scatterpie)
vicosa <- leaflet() |>
addTiles() |>
addProviderTiles(providers$Esri.NatGeoWorldMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
vicosa
vicosa <- leaflet(sbr) |>
addTiles() |>
#addProviderTiles(providers$Esri.NatGeoWorldMap) |>
#setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
vicosa
Viçosa <- leaflet() |>
addTiles() |>
setView(lng = -42.8825, lat = - 20.7546, zoom = 15)
Viçosa
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
sbr2 <- sbr |>
separate(planting, into =
c("year", "month", "day"), sep = "-", remove = FALSE)
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
MG <- BRA |> filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(color = "black",
fill = "white") +
geom_point(data = sbr2,
aes(longitude, latitude, color = year), alpha = 0.5)+
facet_wrap(~year)+
theme_void()
sbr2 <- sbr |>
separate(planting, into =
c("year", "month", "day"), sep = "-", remove = FALSE)
BRA <- ne_states(country = "Brazil",
returnclass = "sf")
MG <- BRA |> filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(color = "black",
fill = "white") +
geom_point(data = sbr2,
aes(longitude, latitude, color = year), alpha = 0.5)+
facet_wrap(~year)+
theme_void()
BRA <- ne_states (country = "Brazil",
returnclass = "sf")
MG <- BRA |>
filter(name_en == "Minas Gerais")
bra <- ggplot(BRA) +
geom_sf(fill = "white", color = "blue", linewidth = 0.5) +
geom_point(data = MG, aes(longitude, latitude), color ="red") + theme_map() +
annotation_north_arrow(which_north = "grid")
library(ggspatial)
ggplot(BRA) +
annotation_north_arrow(location = "bl")+
annotation_scale(location = "br")+
geom_sf(color = "black",
fill = "white") +
geom_point(data = sbr2,
aes(longitude, latitude, color = year, size = severity), alpha = 0.5)+
labs(color = "Planting Year")+
theme_minimal()+
theme(legend.position = "right")
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
library(gsheet) # importação dos dados
library(tidyverse) # manipulação dos dados
library(ggthemes) # Temas gráficos
library(epifitter) # utilizar a função AUDPC()
library(performance) # este e demais pacotes destinados a análise
library(ExpDes.pt)
install.packages("ExpDes.pt")
library(gsheet) # importação dos dados
library(tidyverse) # manipulação dos dados
library(ggthemes) # Temas gráficos
library(epifitter) # utilizar a função AUDPC()
library(performance) # este e demais pacotes destinados a análise
library(ExpDes.pt)
library(emmeans)
library(multcomp)
dados <- gsheet2tbl('https://docs.google.com/spreadsheets/d/18JYhRvnwob5L0kAOor9o22Y_AwLkD7XU/edit?gid=173826027#gid=173826027')
dados <- dados |>
mutate(sev.med = rowMeans(across(starts_with('sev_f')))) |>
dplyr::select(- starts_with('sev_f')) |>
group_by(treat, block, assessment) |>
summarise(sev_med = mean(sev.med))
dados$sev_med <- round(dados$sev_med, 2)
plot1 <- dados |>
ggplot(aes(x = treat, y = sev_med, color = treat)) +
geom_jitter(width = 0.2, size = 2.5, alpha = 0.7) +
labs(x = ' ', y = 'Severidade (%)', color = ' ') +
theme_classic() +
theme(axis.text.x = element_blank(), text = element_text(size = 15)) +
ylim(0, 100) +
geom_hline(yintercept = max(dados$sev_med), linetype = 3) +
annotate(geom = 'text', y = 15, x = 4, label = '12%')
plot1
plot2 <- dados |>
group_by(treat, assessment) |>
summarise(med = mean(sev_med)) |>
ggplot(aes(x = assessment, y = med, color = treat)) +
geom_point() +
geom_line(size = 1) +
theme(text = element_text(size = 15)) +
theme_classic() +
labs(x = 'Avaliações', y = 'Severidade média (%)', color = 'Tratamentos')
plot2
dados |>
group_by(treat, assessment) |>
summarise(med = mean(sev_med)) |>
ggplot(aes(x = assessment, y = med)) +
geom_jitter(data = dados, aes(y = sev_med), color = 'gray', alpha = 0.7, width = 0.1) +
geom_line(size = 0.5) +
geom_point(color = 'red') +
theme_clean() +
theme(text = element_text(size = 15), axis.title = element_text(size = 15)) +
facet_wrap(~treat) +
labs(x = 'Avaliações', y = 'Severidade média (%)', color = 'Tratamentos')
aacpd <- dados |>
group_by(treat, block) |>
summarise(aacpd = AUDPC(assessment, sev_med))
plot3 <- aacpd |>
group_by(treat) |>
summarise(med = mean(aacpd)) |>
ggplot(aes(x = treat, y = med)) +
geom_col(fill = 'lightblue') +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), text = element_text(size = 15)) +
labs(x = ' ', y = "AACPD")
plot3
y.max <- dados |>
filter(assessment == 4) |>
dplyr::select(-assessment)
prod <- gsheet2tbl('https://docs.google.com/spreadsheets/d/18JYhRvnwob5L0kAOor9o22Y_AwLkD7XU/edit?gid=1793405925#gid=1793405925')
prod <- prod |>
dplyr::select(treat, block, productivity)
plot4 <-  prod |>
group_by(treat) |>
summarise(prod = mean(productivity)) |>
ggplot(aes(treat, prod)) +
geom_col(fill = 'lightblue') +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), text = element_text(size = 15)) +
labs(x = ' ', y = "Produtividade (ton/ha)") +
ylim(0, 60)
plot4
m1 <- lm(aacpd ~ treat + block, aacpd)
check_heteroscedasticity(m1)
check_normality(m1)
anova(m1)
cld(emmeans(m1, ~ treat), Letters = letters)
m2 <- lm(sev_med ~ treat + block, y.max)
check_heteroscedasticity(m2)
check_normality(m2)
anova(m2)
cld(emmeans(m2, ~ treat), Letters = letters)
m3 <- lm(productivity ~ treat + block, prod)
check_heteroscedasticity(m3)
check_normality(m3)
anova(m3)
plot2 <- plot2 +
annotate(geom = 'text', x = 4, y = 1.72, label = '*', size = 7) +
annotate(geom = 'text', x = 4, y = 3.6, label = '*', size = 7)
plot2
plot3 <- plot3 +
annotate(geom = 'text', x = 5, y = 1.7, label = '*', size = 7) +
annotate(geom = 'text', x = 2, y = 3, label = '*', size = 7) +
annotate(geom = 'text', x = 4, y = 3.8, label = '*', size = 7) +
annotate(geom = 'text', x = 1, y = 4, label = '*', size = 7)
plot3
plot4 <- plot4 +
annotate(geom = 'text', x = 7, y = 49, label = 'ns', size = 5)
plot4
library(tidyverse)
library(gsheet)
library(epifitter)
library(lme4)
library(ExpDes.pt)
library(agricolae)
library(AgroR)
library(performance)
# Dados de produtividade
dados <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1KPWFOqs_Cclj3VgiHPxP3zazOmucRVAc/edit?gid=836516162#gid=836516162')
# Dados de severidade
dados2 <- gsheet2tbl('https://docs.google.com/spreadsheets/d/1KPWFOqs_Cclj3VgiHPxP3zazOmucRVAc/edit?gid=1484935950#gid=1484935950')
dados2 <- dados2 |>
mutate(sev.med = rowMeans(across(starts_with('sev_f')))) |>
dplyr::select(- c(9, 10, 11)) |>
group_by(treat, block, assessment) |>
summarise(sev.med = mean(sev.med))
dados2
aacpd1 <- dados2 |>
group_by(treat, block) |>
summarise(aacpd = AUDPC(assessment, sev.med))
aacpd <- aacpd1 |>
separate(col = treat, into = c('Fator1', 'Fator2'), sep = ' ')
aacpd2 <- aacpd |>
mutate(Fator2= ifelse(Fator1 == 'TESTEMUNHA', 0, Fator2))
aacpd2
m1 <- lm(aacpd ~ Fator1*Fator2 + block, data = aacpd2)
check_normality(m1)
check_heteroscedasticity(m1)
# Estruturando banco de dados
aacpd <- aacpd |>
mutate(treat.ad = ifelse(Fator1 == 'TESTEMUNHA', Fator1, NA)) |>
mutate(Fator1 = ifelse(Fator1 == 'TESTEMUNHA', NA, Fator1))
fatorial <- aacpd |>
filter(!is.na(Fator1))
treat.ad <- aacpd |>
filter(treat.ad == 'TESTEMUNHA')
# Rodando od testes
fat2.ad.dbc(fator1 = fatorial$Fator1, fator2 = fatorial$Fator2, bloco = fatorial$block, resp = fatorial$aacpd, respAd = treat.ad$aacpd, fac.names = c('Fungicidas', 'Estádios'))
dunnett(trat = aacpd1$treat, resp = aacpd1$aacpd, control = 'TESTEMUNHA', model = 'DBC', block = aacpd1$block)
y.max1 <- dados2 |>
filter(assessment == 4)
y.max1$sev.med <- round(y.max1$sev.med, 2)
y.max <- y.max1 |>
separate(col = treat, into = c('Fator1', 'Fator2'), sep = ' ')
y.max <- y.max |>
mutate(treat.ad = ifelse(Fator1 == 'TESTEMUNHA', Fator1, NA))
y.max <- y.max |>
mutate(Fator1 = ifelse(Fator1 == 'TESTEMUNHA', NA, Fator1))
y.max1 <- dados2 |>
filter(assessment == 4)
y.max1$sev.med <- round(y.max1$sev.med, 2)
y.max <- y.max1 |>
separate(col = treat, into = c('Fator1', 'Fator2'), sep = ' ')
y.max <- y.max |>
mutate(treat.ad = ifelse(Fator1 == 'TESTEMUNHA', Fator1, NA))
y.max <- y.max |>
mutate(Fator1 = ifelse(Fator1 == 'TESTEMUNHA', NA, Fator1))
y.max.pre <- y.max |>
dplyr::select(-treat.ad, -assessment) |>
mutate(Fator1 = ifelse(is.na(Fator1), 'TESTEMUNHA', Fator1)) |>
mutate(Fator2 = ifelse(is.na(Fator2), 0, Fator2))
m2 <- lm(sev.med ~ Fator1*Fator2 + block, y.max.pre)
check_normality(m2)
check_heteroscedasticity(m2)
y.max
fator.y <- y.max |>
filter(!-is.na(Fator1))
treat.ad.y <- y.max |>
filter(!-is.na(treat.ad))
fat2.ad.dbc(fator1 = fator.y$Fator1, fator2 = fator.y$Fator2, bloco = fator.y$block, resp = fator.y$sev.med, respAd = treat.ad.y$sev.med, fac.names = c('Fungicidas', 'Estádios'))
dunnett(trat = y.max1$treat, resp = y.max1$sev.med, control = 'TESTEMUNHA', model = 'DBC', block = y.max1$block)
produtividade <- dados |>
dplyr::select(Fator1, Fator2, treat.ad, block, productivity)
produtividade
trat.ad <- produtividade |>
filter(treat.ad == 'TESTEMUNHA') |>
dplyr::select(productivity)
trat.ad
fatorial <- produtividade |>
filter(!is.na(Fator1))
prod.pre <- produtividade |>
dplyr::select(-treat.ad) |>
mutate(Fator1 = ifelse(is.na(Fator1), 'TESTEMUNHA', Fator1)) |>
mutate(Fator2 = ifelse(is.na(Fator2), 0, Fator2))
m3 <- lm(productivity ~ Fator1*Fator2 + block, prod.pre)
check_normality(m3)
check_heteroscedasticity(m3)
fat2.ad.dbc(fator1 = fatorial$Fator1, fator2 = fatorial$Fator2, bloco = fatorial$block, resp = fatorial$productivity, respAd = trat.ad$productivity, fac.names = c('Fungicidas', 'Estádios'))
produtividade2 <- produtividade |>
mutate(Fator1 = ifelse(is.na(Fator1), 'TESTEMUNHA', Fator1 )) |>
unite(col = treat, Fator1, Fator2, sep = ' ', na.rm = TRUE)
dunnett(trat = produtividade2$treat, resp = produtividade2$productivity, control = 'TESTEMUNHA', model = 'DBC', block = produtividade2$block)
