{
  "hash": "d5bb2a94028e81aee4187c0164733229",
  "result": {
    "markdown": "---\ntitle: \"Aprendendo funções básicas no R.\"\nformat: html\neditor: visual\nmessage: false\nwarnig: false\n---\n\n\nPara dar início nesta  primeira aula será feita uma breve introdução aos softwares R e RStudio, apresentando como criar projetos, instalar e carregar pacotes e criar vetores, data frames e realizar operações básicas no RStudio.\n\n## Para criar um projeto\n\nInicialmente, será criado um projeto, onde serão mantidos todos os arquivos da disciplina. Para isso, bastar clicar em:\n\n-   \"File\" -\\> \"New Project...\" -\\> \"New Directory\" -\\> \"New Project\"\n\n-   Da-se um nome ao projeto e escolhida a pasta em que ele será mantido. Feito isso, prosseguimos, clicando em \"Create Project\".\n\n    ## **Instalando e carregando pacotes**\n\n    Os pacotes são fundamentais para o funcionamento do RStudio, pois contém funções que serão utilizadas em várias análises no decorrer da disciplina. Um pacote pode ser instalado manualmente, seguindo os passos:\n\n-   \"Packages\" -\\> \"Install\" -\\> Na linha \"Packages\", digite o nome do pacote de interesse, no qual foi usado o exemplo do \"Agricolae\". -\\> Em seguida, clique em \"Install\"\n\n#  **`ADENTRE O MUNDO R!`**\n\n**Pacotes carregados:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(agricolae)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'agricolae' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(epifitter)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## **Para criar vetores**\n\nValores adiconados aqui, irão aparecer como objetos com dados #uso de dois \\*\\* para deixar em negrito **exemplo** #uso de um \\* deixa ele em itálico *exemplo.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#usando a programação para a criação de vetores \n\nx <- 10\ny <- x * 10 \nz <- x * y\n\n#Também é possível criar um vetor com um conjunto de valores:\n\nA <- c(1:10)\n\nb <- c(11:20)\n```\n:::\n\n\n## **Para criar data frames**\n\nPara criação de dataframes, é utilizada a função `data.frame`. Primeiros é dado um nome ao objeto (df), em seguida especificamos o que será colocado nele (os vetores A e B).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(A,b)\n\ndates<-c(14,21,28) \n# days\n# example 1: evaluation - vector\nevaluation<-c(40,80,90)\naudpc(evaluation,dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nevaluation \n      1015 \n```\n:::\n\n```{.r .cell-code}\n#visualiza\nplot(pressure)\n```\n\n::: {.cell-output-display}\n![](Aula1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nstr(pressure)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t19 obs. of  2 variables:\n $ temperature: num  0 20 40 60 80 100 120 140 160 180 ...\n $ pressure   : num  0.0002 0.0012 0.006 0.03 0.09 0.27 0.75 1.85 4.2 8.8 ...\n```\n:::\n\n```{.r .cell-code}\ndf <- cars\ncars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   speed dist\n1      4    2\n2      4   10\n3      7    4\n4      7   22\n5      8   16\n6      9   10\n7     10   18\n8     10   26\n9     10   34\n10    11   17\n11    11   28\n12    12   14\n13    12   20\n14    12   24\n15    12   28\n16    13   26\n17    13   34\n18    13   34\n19    13   46\n20    14   26\n21    14   36\n22    14   60\n23    14   80\n24    15   20\n25    15   26\n26    15   54\n27    16   32\n28    16   40\n29    17   32\n30    17   40\n31    17   50\n32    18   42\n33    18   56\n34    18   76\n35    18   84\n36    19   36\n37    19   46\n38    19   68\n39    20   32\n40    20   48\n41    20   52\n42    20   56\n43    20   64\n44    22   66\n45    23   54\n46    24   70\n47    24   92\n48    24   93\n49    24  120\n50    25   85\n```\n:::\n\n```{.r .cell-code}\n#df$dist é uma forma de acessar uma coluna específica chamada \"dist\" de um data frame chamado df. \n\ndf$dist <- log(df$dist)\nplot(df$dist)\n```\n\n::: {.cell-output-display}\n![](Aula1_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\ndf$dist\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 0.6931472 2.3025851 1.3862944 3.0910425 2.7725887 2.3025851 2.8903718\n [8] 3.2580965 3.5263605 2.8332133 3.3322045 2.6390573 2.9957323 3.1780538\n[15] 3.3322045 3.2580965 3.5263605 3.5263605 3.8286414 3.2580965 3.5835189\n[22] 4.0943446 4.3820266 2.9957323 3.2580965 3.9889840 3.4657359 3.6888795\n[29] 3.4657359 3.6888795 3.9120230 3.7376696 4.0253517 4.3307333 4.4308168\n[36] 3.5835189 3.8286414 4.2195077 3.4657359 3.8712010 3.9512437 4.0253517\n[43] 4.1588831 4.1896547 3.9889840 4.2484952 4.5217886 4.5325995 4.7874917\n[50] 4.4426513\n```\n:::\n:::\n\n\n## Para pedir ajuda\n\nUtiliza o \"help\". Aparece a resposta do que a função faz na aba de ajuda \"help\", Além da opção apresentada no chunck pode pedir ajuda da seguinte forma: ?função.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelp(data.frame)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nstarting httpd help server ... done\n```\n:::\n:::\n",
    "supporting": [
      "Aula1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}