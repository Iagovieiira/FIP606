{
  "hash": "a011a593542567fd53b0641121f30369",
  "result": {
    "markdown": "---\ntitle: \"Uso do datapasta e Tabela de contingência\"\noutput: html_document\nmessage: false\nwarning: false\neditor_options: \n  chunk_output_type: inline\n---\n\n\nDurante a aula 4 , serão apresentados diversas operações com dados `datapasta`, para copiar e colar dados como vetores, data frames e tribbles. Também serão feitas tabelas de contingência e gráficos de barras para análise de dados categóricos, utilizando as funções `count` e `tabyl` do pacote `janitor`.\n\nInicialmente, serão instalados (**`datapasta`** e **`janitor`**) e carregados os pacotes que serão necessários durante esta aula.\n\n-   \"Packages\" -\\> \"Install\" -\\> Na linha \"Packages\", digite o nome do pacote de interesse-\\> Em seguida, clique em \"Install\"\n\n## **Pacotes carregados**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(datapasta)\nlibrary(janitor)\nlibrary(tidyverse)\nlibrary(ggthemes)\n```\n:::\n\n\n## **Pacote `datapasta`**\n\nO pacote `datapasta` amplia as capacidades do `RStudio` ao oferecer funcionalidades extras para a cópia e colagem de dados de diferentes origens. Isso permite a importação de dados de tabelas que possuam uma ou várias colunas.\n\n### ***Paste as vector***\n\nPara colar valores como um vetor, seleciona-se \"*Paste as vector*\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#usado para apenas uma coluna \n\nvet <-c(\"comp\", \"9\", \"12.5\", \"10\", \"8\", \"13.2\", \"11\", \"10.8\", \"9.5\", \"10.8\", \"10.4\", \"13.72\", \"15.91\", \"15.7\", \"14.2\", \"15.9\", \"16.54\", \"18\", \"14.4\", \"16.41\", \"16\")\n```\n:::\n\n\n### ***Paste as tribble***\n\nUma opção para criar um novo data frame é colar utilizando a opção \"*Paste as tribble*\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#usado para mais de uma coluna \ndat2 <- tibble::tribble(\n      ~trat, ~rep, ~comp,\n      \"Mg2\",   1L,     9,\n      \"Mg2\",   2L,  12.5,\n      \"Mg2\",   3L,    10,\n      \"Mg2\",   4L,     8,\n      \"Mg2\",   5L,  13.2,\n      \"Mg2\",   6L,    11,\n      \"Mg2\",   7L,  10.8,\n      \"Mg2\",   8L,   9.5,\n      \"Mg2\",   9L,  10.8,\n      \"Mg2\",  10L,  10.4,\n  \"control\",   1L, 13.72,\n  \"control\",   2L, 15.91,\n  \"control\",   3L,  15.7,\n  \"control\",   4L,  14.2,\n  \"control\",   5L,  15.9,\n  \"control\",   6L, 16.54,\n  \"control\",   7L,    18,\n  \"control\",   8L,  14.4,\n  \"control\",   9L, 16.41,\n  \"control\",  10L,    16\n  )\n```\n:::\n\n\nUtilizando dados sobre os países:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisitas <- tibble::tribble(\n             ~V1,              ~V2, ~V3,\n              1L,      \"Argentina\",  1L,\n              2L,        \"Austria\",  1L,\n              3L,        \"Bolivia\",  1L,\n              4L,     \"Cape Verde\",  1L,\n              5L,          \"China\",  1L,\n              6L,          \"Egypt\",  1L,\n              7L,        \"Finland\",  1L,\n              8L,          \"India\",  1L,\n              9L,          \"Italy\",  1L,\n             10L,       \"Malaysia\",  1L,\n             11L,       \"Pakistan\",  1L,\n             12L,         \"Poland\",  1L,\n             13L,      \"Singapore\",  1L,\n             14L,    \"Timor-Leste\",  1L,\n             15L,        \"Uruguay\",  1L,\n             16L,          \"Chile\",  2L,\n             17L,       \"Paraguay\",  2L,\n             18L,           \"Peru\",  2L,\n             19L,        \"Ecuador\",  3L,\n             20L,         \"France\",  3L,\n             21L,    \"Netherlands\",  4L,\n             22L,        \"Germany\",  5L,\n             23L,        \"Hungary\",  5L,\n             24L, \"United Kingdom\",  5L,\n             25L,       \"Colombia\",  8L,\n             26L,      \"(not set)\", 12L,\n             27L,          \"Spain\", 16L,\n             28L,         \"Angola\", 19L,\n             29L,  \"United States\", 23L,\n             30L,       \"Portugal\", 33L,\n             31L,     \"Mozambique\", 43L,\n             32L,         \"Brasil\", 43L)\n```\n:::\n\n\n-   Utilizando a função \"*paste as tribble\"*, os dados presentes neste link (<https://r4pde.net/temporal-fitting.html#entering-data> - seção 10.4) serão importados:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#os dados a seguir estão no formato largo\npepper <- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  ) \n```\n:::\n\n\n-   Visualizando os dados importados acima, é possível observar que eles estão no formato largo. Sendo preciso transformá-los para o formato longo.\n\n-   Para isso, será utilizada a função `pivot_longer (tidyr)`. Indicamos quais colunas serão transformadas para o formato longo e atribuímos nomes às novas colunas:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Transfromar para o formato longo \n\npepper |> \n  pivot_longer(2:4, \n               names_to = \"epidemic\",\n               values_to = \"inc\") |> \n  \n  \n  #Criar grafico no ggplot (grafico de pontos com linhas)\n  ggplot(aes(t, inc, color = epidemic)) +\n  geom_point() +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#para retirar a leganda \n\n#theme(legend.position = \"none\")\n```\n:::\n\n\nCriação de gráfico de pontos com linhas utilizando o `pivot_longer`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper |> \n  pivot_longer(2:4, \n               names_to = \"epidemic\",\n               values_to = \"inc\") |> \n  \n  #Criar grafico no ggplot (grafico de pontos com linhas)\n  ggplot(aes(t, inc, color = epidemic)) +\n  geom_point() +\n  geom_line() +\n  annotate(geom = \"text\",\n           x = 12,\n           y = 0.75, \n           label = \"1\") +\n    annotate(geom = \"text\",\n           x = 25,\n           y = 0.75, \n           label = \"2\") +\n  annotate(geom = \"text\",\n           x = 48,\n           y = 0.75, \n           label = \"3\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## **Tabela de contingência**\n\nSerão construídas tabelas de contingências. Estas tabelas que permitem fazer contagens de elementos/ ocorrências de variáveis categóricas dentro de uma mesma coluna rapidamente.\n\nFormato `.csv`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- read_csv (\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\n#restringir contagem para duas variaveis (region, zone), FORMATO LARGO\ncr |> \n  count(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n  region zone             n\n  <chr>  <chr>        <int>\n1 Oromia Bale            30\n2 Oromia Ilu AbaBora     45\n3 Oromia Jimma           45\n4 Oromia West Wellega    45\n5 SNNPR  Bench Maji      45\n6 SNNPR  Gedio           45\n7 SNNPR  Keffa           45\n8 SNNPR  Sheka           45\n9 SNNPR  Sidama          60\n```\n:::\n:::\n\n\n### **Utilizando a função `tabyl`**\n\nDentro do pacote `janitor` há a função `tabyl`, com objetivo de gera uma tabela de frequências:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\n\n# para descrever um conjunto, FORMATO LONGO \n\ncr |> \n  tabyl(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n region Bale Bench Maji Gedio Ilu AbaBora Jimma Keffa Sheka Sidama West Wellega\n Oromia   30          0     0          45    45     0     0      0           45\n  SNNPR    0         45    45           0     0    45    45     60            0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# se inverte zona por region fica no formato largo \n\ncr |> \n  tabyl(zone, region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         zone Oromia SNNPR\n         Bale     30     0\n   Bench Maji      0    45\n        Gedio      0    45\n  Ilu AbaBora     45     0\n        Jimma     45     0\n        Keffa      0    45\n        Sheka      0    45\n       Sidama      0    60\n West Wellega     45     0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  tabyl(cultivar, farm_management)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n cultivar Intensive Minimal Moderate Unmanaged\n Improved        83       0        0         0\n    Local         0      10        4       102\n  Mixture        82      59       65         0\n```\n:::\n:::\n\n\n### **Visualizando**\n\n`count` é utilizada para contar o número de ocorrências de valores únicos em uma variável ou combinação de variáveis dentro de um conjunto de dados. Pertence ao pacote `dplyr`. Foi criado o gráficos de coluna. Faz o empilhamento das colunas. Padrão steck.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |>  \n  count(farm_management, cultivar) |> \n  ggplot(aes(cultivar, n, fill = farm_management)) +\n  geom_col(position = \"stack\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nGráfico de barras lado a lado. Alterando a posição (dodge):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#para desemplilhar e colocar uma barra ao lado da outra\n\ncr |>  \n  count(farm_management, cultivar) |> \n  ggplot(aes(cultivar, n, fill = farm_management, label = n)) +\n  geom_col(position = \"dodge2\") +\n  scale_fill_colorblind()+\n  theme_bw()+\n  theme(strip.text.x = element_blank())+\n  facet_wrap(~cultivar, scales = \"free\") +\n  geom_text(position = position_dodge (width = 0.9))+\n  facet_wrap(~cultivar, scales = \"free_x\" )\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### **Importação de dados de planilha**\n\nFormato `online`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#PACOTES\nlibrary(gsheet)\nlibrary(tidyverse)\n\nmg <- gsheet2tbl (\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n\n#Criando gráficos de colunas com médias e desvio padrão.\n```\n:::\n\n\n## **visualização dos dados**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg |> \n  ggplot(aes(trat, comp))+\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmg |> \n  group_by(trat) |>\n  summarise(mean_comp = mean(comp),\n            sd_comp = sd(comp)) |> \n  ggplot(aes(trat, mean_comp))+\n  geom_col(fill = \"steelblue\", width = 0.5)+\n  geom_point(size = 3)+\n  ylim(4, 20)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp),\n                width = 0.05)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-15-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#GEOM_POINT + GEOM_ERRORBAR \n```\n:::\n",
    "supporting": [
      "Aula4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}